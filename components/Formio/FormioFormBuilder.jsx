import React, { useState } from "react";
import { FormBuilder, Form } from "@formio/react";
const FormioFormBuilder = () => {
  const [schema, setSchema] = useState({
    display: "form",
    components: [
      {
        label: "Select State",
        labelPosition: "top",
        widget: "choicesjs",
        placeholder: "Select State",
        description: "",
        tooltip: "",
        customClass: "",
        tabindex: "",
        hidden: false,
        hideLabel: false,
        uniqueOptions: false,
        autofocus: false,
        disabled: false,
        tableView: true,
        modalEdit: false,
        multiple: false,
        dataSrc: "url",
        data: {
          values: [
            {
              label: "",
              value: "",
            },
          ],
          resource: "",
          url: "https://states-api.onrender.com/api/states",
          json: "",
          headers: [
            {
              key: "",
              value: "",
            },
          ],
          custom: "",
        },
        dataType: "",
        idPath: "id",
        valueProperty: "",
        template: "<span>{{ item.state }}</span>",
        refreshOn: "",
        refreshOnBlur: "",
        clearOnRefresh: false,
        searchEnabled: true,
        selectThreshold: 0.3,
        readOnlyValue: false,
        customOptions: {},
        useExactSearch: false,
        persistent: true,
        protected: false,
        dbIndex: false,
        encrypted: false,
        clearOnHide: true,
        customDefaultValue: "",
        calculateValue: "",
        calculateServer: false,
        allowCalculateOverride: false,
        validateOn: "change",
        validate: {
          required: false,
          onlyAvailableItems: false,
          customMessage: "",
          custom: "",
          customPrivate: false,
          json: "",
          strictDateValidation: false,
          multiple: false,
          unique: false,
        },
        unique: false,
        errorLabel: "",
        errors: "",
        key: "state",
        tags: [],
        properties: {},
        conditional: {
          show: null,
          when: null,
          eq: "",
          json: "",
        },
        customConditional: "",
        logic: [],
        attributes: {},
        overlay: {
          style: "",
          page: "",
          left: "",
          top: "",
          width: "",
          height: "",
        },
        type: "select",
        indexeddb: {
          filter: {},
        },
        lazyLoad: true,
        selectValues: "states",
        selectFields: "",
        disableLimit: false,
        searchField: "",
        searchDebounce: 0.3,
        minSearch: 0,
        filter: "",
        limit: 100,
        noRefreshOnScroll: false,
        authenticate: false,
        ignoreCache: false,
        redrawOn: "",
        input: true,
        prefix: "",
        suffix: "",
        dataGridLabel: false,
        showCharCount: false,
        showWordCount: false,
        allowMultipleMasks: false,
        addons: [],
        fuseOptions: {
          include: "score",
          threshold: 0.3,
        },
        id: "et0bzuv",
        defaultValue: {},
        sort: "",
      },
      {
        label: "Select City",
        labelPosition: "top",
        widget: "choicesjs",
        placeholder: "Select Cities",
        description: "",
        tooltip: "",
        customClass: "",
        tabindex: "",
        hidden: false,
        hideLabel: false,
        uniqueOptions: false,
        autofocus: false,
        disabled: false,
        tableView: true,
        modalEdit: false,
        multiple: false,
        dataSrc: "url",
        data: {
          values: [
            {
              label: "",
              value: "",
            },
          ],
          resource: "",
          url: "https://states-api.onrender.com/api/cities/{{ row.state.state }}",
          json: "",
          headers: [
            {
              key: "",
              value: "",
            },
          ],
          custom: "",
        },
        dataType: "",
        idPath: "id",
        valueProperty: "",
        template: "<span>{{ item.label }}</span>",
        refreshOn: "state",
        refreshOnBlur: "state",
        clearOnRefresh: true,
        searchEnabled: true,
        selectThreshold: 0.3,
        readOnlyValue: false,
        customOptions: {},
        useExactSearch: false,
        persistent: true,
        protected: false,
        dbIndex: false,
        encrypted: false,
        clearOnHide: true,
        customDefaultValue: "",
        calculateValue: "",
        calculateServer: false,
        allowCalculateOverride: false,
        validateOn: "change",
        validate: {
          required: false,
          onlyAvailableItems: false,
          customMessage: "",
          custom: "",
          customPrivate: false,
          json: "",
          strictDateValidation: false,
          multiple: false,
          unique: false,
        },
        unique: false,
        errorLabel: "",
        errors: "",
        key: "city",
        tags: [],
        properties: {},
        conditional: {
          show: null,
          when: null,
          eq: "",
          json: "",
        },
        customConditional: "",
        logic: [],
        attributes: {},
        overlay: {
          style: "",
          page: "",
          left: "",
          top: "",
          width: "",
          height: "",
        },
        type: "select",
        indexeddb: {
          filter: {},
        },
        lazyLoad: false,
        selectValues: "cities",
        selectFields: "",
        disableLimit: false,
        searchField: "",
        searchDebounce: 0.3,
        minSearch: 0,
        filter: "",
        limit: 100,
        noRefreshOnScroll: false,
        authenticate: false,
        ignoreCache: false,
        redrawOn: "",
        input: true,
        prefix: "",
        suffix: "",
        dataGridLabel: false,
        showCharCount: false,
        showWordCount: false,
        allowMultipleMasks: false,
        addons: [],
        fuseOptions: {
          include: "score",
          threshold: 0.3,
        },
        id: "e8a2mvm",
        defaultValue: {},
        sort: "",
      },
      {
        type: "button",
        label: "Submit",
        key: "submit",
        size: "md",
        block: false,
        action: "submit",
        disableOnInvalid: true,
        theme: "primary",
        id: "e5yo1le",
        input: true,
        placeholder: "",
        prefix: "",
        customClass: "",
        suffix: "",
        multiple: false,
        defaultValue: null,
        protected: false,
        unique: false,
        persistent: false,
        hidden: false,
        clearOnHide: true,
        refreshOn: "",
        redrawOn: "",
        tableView: false,
        modalEdit: false,
        dataGridLabel: true,
        labelPosition: "top",
        description: "",
        errorLabel: "",
        tooltip: "",
        hideLabel: false,
        tabindex: "",
        disabled: false,
        autofocus: false,
        dbIndex: false,
        customDefaultValue: "",
        calculateValue: "",
        calculateServer: false,
        widget: {
          type: "input",
        },
        attributes: {},
        validateOn: "change",
        validate: {
          required: false,
          custom: "",
          customPrivate: false,
          strictDateValidation: false,
          multiple: false,
          unique: false,
        },
        conditional: {
          show: null,
          when: null,
          eq: "",
        },
        overlay: {
          style: "",
          left: "",
          top: "",
          width: "",
          height: "",
        },
        allowCalculateOverride: false,
        encrypted: false,
        showCharCount: false,
        showWordCount: false,
        properties: {},
        allowMultipleMasks: false,
        addons: [],
        leftIcon: "",
        rightIcon: "",
      },
    ],
  });
  return (
    <div>
      <h5
        style={{
          backgroundColor: "#00346cca",
          padding: "1rem",
          color: "#fff",
          textAlign: "center",
        }}
      >
        Form Builder
      </h5>
      <FormBuilder
        form={schema}
        onChange={(schema) => console.log(schema)}
        onUpdateComponent={(e) => console.log("e", e)}
      />
      <br />
      <div
        style={{
          backgroundColor: "#007bff75",
          padding: "1rem",
          marginTop: "2rem",
          marginBottom: "2rem",
        }}
      >
        <h5
          style={{
            backgroundColor: "#00346cca",
            padding: "1rem",
            color: "#fff",
            textAlign: "center",
          }}
        >
          Form
        </h5>
        <Form form={schema} />
      </div>
    </div>
  );
};

export default FormioFormBuilder;
